{{ template "header" $ }}

import "net"

type extensionFields struct{
{{- range . }}
// {{ .Meaning }}
{{ .CEFKeyName | unexported | renameKeyWord }} {{ typeMapping .DataType }}
{{- end }}
}

{{ range . }}
func (f *extensionFields) Set{{ .CEFKeyName | title | pretty }}(v {{ typeMapping .DataType }}) *extensionFields {
{{- if not .Length }}
{{- else if eq .Length "N/A" }}
{{- else if eq .Length "64-bit" }}
{{- else }}
    if len(v) > {{ .Length }} {
        v = v[:{{ .Length }}]
    }
{{ end }}
    f.{{ .CEFKeyName | unexported | renameKeyWord }} = v

    return f
}
{{ end }}

{{ range . }}
// {{ .Meaning }}
func (f *extensionFields) {{ .CEFKeyName | title | pretty }}() {{ typeMapping .DataType }} {
    return f.{{ .CEFKeyName | unexported | renameKeyWord }}
}
{{ end }}